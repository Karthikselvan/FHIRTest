<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>uk.nhs.digital.CareConnect</groupId>
  <artifactId>Demostrator-Server-Hapi</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

 <properties>
        <hapi-fhir-version>2.3</hapi-fhir-version>
	    <slf4j-version>1.7.5</slf4j-version>
	    <junit-version>4.12</junit-version>
		 <spring-version>4.3.2.RELEASE</spring-version>
	    <spring-boot-version>1.4.0.RELEASE</spring-boot-version>
	    <swagger-ui-version>2.1.4</swagger-ui-version>
	    <hawtio.version>1.5.0</hawtio.version>
	    <log4j-version>2.8.1</log4j-version>
	     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	     <ebay_cors_filter_version>1.0.1</ebay_cors_filter_version>
  </properties>

  <name>Demostrator-Server-Hapi</name>
  <url>http://maven.apache.org</url>
  
    <!-- Spring-Boot and Camel BOM -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot-version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <dependencies>
  	
  	<!-- Spring Boot -->
    <dependency>
      	<groupId>org.springframework.boot</groupId>
      	<artifactId>spring-boot-starter-web</artifactId>
    </dependency>
   	<dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-actuator</artifactId>
   </dependency>
   
   
   	<!-- This dependency includes the core HAPI-FHIR classes -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-base</artifactId>
			<version>${hapi-fhir-version}</version>
		</dependency>

		<!-- At least one "structures" JAR must also be included -->
		
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-structures-dstu3</artifactId>
			<version>${hapi-fhir-version}</version>
		</dependency>

		<!-- This dependency includes the JPA server itself, which is packaged separately from the rest of HAPI FHIR 
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-jpaserver-base</artifactId>
			<version>${hapi-fhir-version}</version>
		</dependency>
-->
		<!-- This dependency is used for the "FHIR Tester" web app overlay -->
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapi-fhir-version}</version>
			<type>war</type>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>ca.uhn.hapi.fhir</groupId>
			<artifactId>hapi-fhir-testpage-overlay</artifactId>
			<version>${hapi-fhir-version}</version>
			<classifier>classes</classifier>
			<scope>provided</scope>
		</dependency>
 		
		<!-- HAPI-FHIR uses Logback for logging support. The logback library is included automatically by Maven as a part of the hapi-fhir-base dependency, but you also need to include a logging library. Logback 
			is used here, but log4j would also be fine. -->
		<!--  <dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>  -->
		
        
	
		<!-- Needed for JEE/Servlet support -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		
		</dependency>
		
		<dependency>
			  <groupId>javax.inject</groupId>
			  <artifactId>javax.inject</artifactId>
			  <version>1</version>
		</dependency>
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-core</artifactId>
		  
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager -->
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-entitymanager</artifactId>
		   
		</dependency>
		
		

		<!-- If you are using HAPI narrative generation, you will need to include Thymeleaf as well. Otherwise the following can be omitted. 
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
		
		</dependency>
		<dependency>
				<groupId>org.thymeleaf</groupId>
				<artifactId>thymeleaf-spring4</artifactId>
			
		</dependency>
		-->
		
		<!-- Used for CORS support -->
		<dependency>
			<groupId>org.ebaysf.web</groupId>
			<artifactId>cors-filter</artifactId>
			<version>${ebay_cors_filter_version}</version>
			<exclusions>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring Web is used to deploy the server to a web container. -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			
		</dependency>

		<!-- You may not need this if you are deploying to an application server which provides database connection pools itself. -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			
		</dependency>
	
		<dependency>
  			<groupId>mysql</groupId>
  			<artifactId>mysql-connector-java</artifactId>
  		
		</dependency>
  
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
    	 <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot-version}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      </plugins>
      </build>
</project>
